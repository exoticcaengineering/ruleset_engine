{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/FiltersBar/FiltersBar.tsx\";\nimport FilterRow from \"../FilterRow/FilterRow\";\nimport InputRow from \"../InputRow/InputRow\";\nimport { FiltersWrapper } from \"./FiltersBar.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltersBar = _ref => {\n  let {\n    schema,\n    existingRules,\n    addRule\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FiltersWrapper, {\n    border: !!existingRules.length,\n    children: [/*#__PURE__*/_jsxDEV(InputRow, {\n      schema: schema,\n      addFilter: addRule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existingRules\",\n      children: existingRules.filter(i => i.key !== \"placeholder\").map((i, index) => /*#__PURE__*/_jsxDEV(FilterRow, {\n        index: index,\n        values: i,\n        removeFilter: () => console.log(\"hello\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = FiltersBar;\nexport default FiltersBar;\nvar _c;\n$RefreshReg$(_c, \"FiltersBar\");","map":{"version":3,"names":["FilterRow","InputRow","FiltersWrapper","jsxDEV","_jsxDEV","FiltersBar","_ref","schema","existingRules","addRule","border","length","children","addFilter","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","i","key","map","index","values","removeFilter","console","log","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/FiltersBar/FiltersBar.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport FilterRow from \"../FilterRow/FilterRow\";\nimport InputRow from \"../InputRow/InputRow\";\nimport { FiltersWrapper } from \"./FiltersBar.styles\";\n\ntype Props = {\n  schema: RuleSchema[];\n  existingRules: RuleValues[];\n  addRule: (newRule: RuleValues) => void;\n};\n\nconst FiltersBar = ({ schema, existingRules, addRule }: Props) => {\n  return (\n    <FiltersWrapper border={!!existingRules.length}>\n      <InputRow schema={schema} addFilter={addRule} />\n      <div className=\"existingRules\">\n        {existingRules\n          .filter((i) => i.key !== \"placeholder\")\n          .map((i: RuleValues, index: number) => (\n            <FilterRow\n              index={index}\n              values={i}\n              removeFilter={() => console.log(\"hello\")}\n            />\n          ))}\n      </div>\n    </FiltersWrapper>\n  );\n};\n\nexport default FiltersBar;\n"],"mappings":";AACA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrD,MAAMC,UAAU,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAC3D,oBACEF,OAAA,CAACF,cAAc;IAACQ,MAAM,EAAE,CAAC,CAACF,aAAa,CAACG,MAAO;IAAAC,QAAA,gBAC7CR,OAAA,CAACH,QAAQ;MAACM,MAAM,EAAEA,MAAO;MAACM,SAAS,EAAEJ;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDb,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAN,QAAA,EAC3BJ,aAAa,CACXW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK,aAAa,CAAC,CACtCC,GAAG,CAAC,CAACF,CAAa,EAAEG,KAAa,kBAChCnB,OAAA,CAACJ,SAAS;QACRuB,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEJ,CAAE;QACVK,YAAY,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,OAAO;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAErB,CAAC;AAACW,EAAA,GAjBIvB,UAAU;AAmBhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}