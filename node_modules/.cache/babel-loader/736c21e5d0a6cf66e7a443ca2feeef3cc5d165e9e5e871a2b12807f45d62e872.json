{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/InputRow/InputRow.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../../ui/Button\";\nimport Dropdown from \"../../ui/Dropdown\";\nimport InputBox from \"../../ui/InputBox\";\nimport { dummySchema } from \"../../utilities/dummyData\";\nimport { InputRowWrapper } from \"./InputRow.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  key: null,\n  operator: null,\n  value: null\n};\nconst InputRow = _ref => {\n  _s();\n  let {\n    schema\n  } = _ref;\n  const [inputValues, setValues] = useState(initialValues);\n  const [currentSchema, setSchema] = useState(null);\n  const updateValue = (key, value) => {\n    setValues({\n      ...inputValues,\n      [key]: value\n    });\n  };\n  const selectSchema = value => {\n    const selectedSchema = schema.find(i => i.field === value);\n    setSchema(selectedSchema);\n    setValues({\n      ...initialValues,\n      key: value\n    });\n  };\n  const addFilter = () => {\n    setValues(initialValues);\n  };\n  return /*#__PURE__*/_jsxDEV(InputRowWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      value: inputValues.key,\n      options: dummySchema.map(i => i.field),\n      variant: \"rectangle\",\n      onSelect: val => selectSchema(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: inputValues.operator,\n      disabled: !currentSchema,\n      options: (currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.operators) || [],\n      variant: \"rounded\",\n      onSelect: val => updateValue(\"operator\", val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      value: inputValues.value || '',\n      inputType: (currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.type) !== \"string\" ? \"number\" : \"text\",\n      onChange: val => updateValue(\"value\", val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !!Object.values(inputValues).some(i => i === null || i === \"\"),\n      onClick: () => addFilter(),\n      text: \"+ Add rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(InputRow, \"P40KJcGIP0E3Y8Vzmai3oL+SBng=\");\n_c = InputRow;\nexport default InputRow;\nvar _c;\n$RefreshReg$(_c, \"InputRow\");","map":{"version":3,"names":["useState","Button","Dropdown","InputBox","dummySchema","InputRowWrapper","jsxDEV","_jsxDEV","initialValues","key","operator","value","InputRow","_ref","_s","schema","inputValues","setValues","currentSchema","setSchema","updateValue","selectSchema","selectedSchema","find","i","field","addFilter","children","options","map","variant","onSelect","val","fileName","_jsxFileName","lineNumber","columnNumber","disabled","operators","inputType","type","onChange","Object","values","some","onClick","text","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/InputRow/InputRow.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"../../ui/Button\"\nimport Dropdown from \"../../ui/Dropdown\"\nimport InputBox from \"../../ui/InputBox\";\nimport { dummySchema } from \"../../utilities/dummyData\";\nimport { InputRowWrapper } from \"./InputRow.styles\"\n\ntype Props = {\n  schema: FilterSchema[]\n}\n\ninterface Values {\n  key: string | null,\n  operator: string | null,\n  value: string | null,\n}\n\nconst initialValues: Values = {\n  key: null,\n  operator: null,\n  value: null\n}\nconst InputRow = ({ schema }: Props) => {\n  const [inputValues, setValues] = useState<Values>(initialValues);\n  const [ currentSchema, setSchema ] = useState<FilterSchema | null>(null)\n\n  const updateValue = (key: string, value: any) => {\n    setValues({ ...inputValues, [key]: value });\n  };\n\n  const selectSchema = (value: string) => {\n    const selectedSchema = schema.find(i => i.field === value);\n    setSchema(selectedSchema!);\n    setValues({ ...initialValues, key: value })\n  }\n\n  const addFilter = () => {\n    setValues(initialValues)\n  };\n\n  return (\n    <InputRowWrapper>\n      <Dropdown\n        value={inputValues.key}\n        options={dummySchema.map(i => i.field)}\n        variant={\"rectangle\"}\n        onSelect={(val: string) => selectSchema(val)}\n      />\n      <Dropdown\n        value={inputValues.operator}\n        disabled={!currentSchema}\n        options={currentSchema?.operators || []}\n        variant={\"rounded\"}\n        onSelect={(val: string) => updateValue(\"operator\", val)}\n      />\n      <InputBox\n        value={inputValues.value || ''}\n        inputType={currentSchema?.type !== \"string\" ? \"number\" : \"text\"}\n        onChange={(val: string) => updateValue(\"value\", val)}\n      />\n      <Button\n        disabled={\n          !!Object.values(inputValues).some((i) => i === null || i === \"\")\n        }\n        onClick={() =>addFilter()}\n        text=\"+ Add rule\"\n      />\n    </InputRowWrapper>\n  );\n}\n\nexport default InputRow"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}