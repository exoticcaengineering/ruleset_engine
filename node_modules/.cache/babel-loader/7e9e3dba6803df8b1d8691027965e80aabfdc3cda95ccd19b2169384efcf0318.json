{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/RulesList/RulesList.tsx\";\nimport RuleRow from \"../RuleRow/RuleRow\";\nimport RuleInputs from \"../RuleInputs/RuleInputs\";\nimport { RulesWrapper } from \"./RulesList.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RulesList = _ref => {\n  let {\n    schema,\n    existingRules,\n    addRule,\n    removeRule\n  } = _ref;\n  const filteredSchema = () => schema.filter(schema => !existingRules.find(rule => rule.name === schema.name));\n  return /*#__PURE__*/_jsxDEV(RulesWrapper, {\n    border: !!existingRules.length,\n    children: [/*#__PURE__*/_jsxDEV(RuleInputs, {\n      schema: filteredSchema(),\n      addFilter: addRule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existingRules\",\n      children: existingRules.map((i, index) => /*#__PURE__*/_jsxDEV(RuleRow, {\n        index: index,\n        values: i,\n        removeRule: removeRule\n      }, i.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = RulesList;\nexport default RulesList;\nvar _c;\n$RefreshReg$(_c, \"RulesList\");","map":{"version":3,"names":["RuleRow","RuleInputs","RulesWrapper","jsxDEV","_jsxDEV","RulesList","_ref","schema","existingRules","addRule","removeRule","filteredSchema","filter","find","rule","name","border","length","children","addFilter","fileName","_jsxFileName","lineNumber","columnNumber","className","map","i","index","values","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/RulesList/RulesList.tsx"],"sourcesContent":["import RuleRow from \"../RuleRow/RuleRow\";\nimport RuleInputs from \"../RuleInputs/RuleInputs\";\nimport { RulesWrapper } from \"./RulesList.styles\";\n\ntype Props = {\n  schema: RuleSchema[];\n  existingRules: RuleValues[];\n  addRule: (newRule: RuleValues) => void;\n  removeRule: (key: string) => void;\n};\n\nconst RulesList = ({ schema, existingRules, addRule, removeRule }: Props) => {\n  const filteredSchema = () =>\n    schema.filter(\n      (schema) => !existingRules.find((rule) => rule.name === schema.name)\n    );\n\n  return (\n    <RulesWrapper border={!!existingRules.length}>\n      <RuleInputs schema={filteredSchema()} addFilter={addRule} />\n      <div className=\"existingRules\">\n        {existingRules.map((i: RuleValues, index: number) => (\n          <RuleRow\n            key={i.name}\n            index={index}\n            values={i}\n            removeRule={removeRule}\n          />\n        ))}\n      </div>\n    </RulesWrapper>\n  );\n};\n\nexport default RulesList;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlD,MAAMC,SAAS,GAAGC,IAAA,IAA2D;EAAA,IAA1D;IAAEC,MAAM;IAAEC,aAAa;IAAEC,OAAO;IAAEC;EAAkB,CAAC,GAAAJ,IAAA;EACtE,MAAMK,cAAc,GAAGA,CAAA,KACrBJ,MAAM,CAACK,MAAM,CACVL,MAAM,IAAK,CAACC,aAAa,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKR,MAAM,CAACQ,IAAI,CAAC,CACrE;EAEH,oBACEX,OAAA,CAACF,YAAY;IAACc,MAAM,EAAE,CAAC,CAACR,aAAa,CAACS,MAAO;IAAAC,QAAA,gBAC3Cd,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEI,cAAc,EAAG;MAACQ,SAAS,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC5DnB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAN,QAAA,EAC3BV,aAAa,CAACiB,GAAG,CAAC,CAACC,CAAa,EAAEC,KAAa,kBAC9CvB,OAAA,CAACJ,OAAO;QAEN2B,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEF,CAAE;QACVhB,UAAU,EAAEA;MAAW,GAHlBgB,CAAC,CAACX,IAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEnB,CAAC;AAACM,EAAA,GArBIxB,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}