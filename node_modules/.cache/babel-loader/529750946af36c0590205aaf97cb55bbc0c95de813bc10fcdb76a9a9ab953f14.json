{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.input`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.blueLight;\n}};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n  box-sizing: border-box;\n  padding: 0 7px;\n`;\n_c = InputWrapper;\nconst InputBox = _ref2 => {\n  _s();\n  let {\n    inputType,\n    onChange,\n    value\n  } = _ref2;\n  const ref = useRef();\n  useEffect(() => {\n    if (!value && ref.current) ref.current.value = \"\";\n  }, [value]);\n  const handleChange = e => {\n    if (inputType === \"number\") e.target.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(InputWrapper, {\n    type: \"text\",\n    onInput: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(InputBox, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = InputBox;\nexport default InputBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"InputBox\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","InputWrapper","input","_ref","theme","colors","blueLight","_c","InputBox","_ref2","_s","inputType","onChange","value","ref","current","handleChange","e","target","replace","type","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  inputType: \"number\" | \"text\";\n  onChange: (val: string) => void;\n  value: string\n};\nconst InputWrapper = styled.input`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${({ theme }) => theme.colors.blueLight};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n  box-sizing: border-box;\n  padding: 0 7px;\n`;\n\nconst InputBox = ({ inputType, onChange, value }: Props) => {\n    const ref = useRef<HTMLInputElement>();\n\n    useEffect(() => {\n      if (!value && ref.current) ref.current!.value = \"\";\n    }, [value]);\n\n  const handleChange = (e: any) => {\n    if (inputType === \"number\")\n      e.target!.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange(e.target.value);\n  };\n\n  return (\n    <InputWrapper type=\"text\" onInput={handleChange}  />\n  );\n};\n\nexport default InputBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,KAAM;AAClC;AACA;AACA;AACA,sBAAsBC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,MAAM,CAACC,SAAS;AAAA,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAbIN,YAAY;AAelB,MAAMO,QAAQ,GAAGC,KAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAJ,KAAA;EACnD,MAAMK,GAAG,GAAGjB,MAAM,EAAoB;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,KAAK,IAAIC,GAAG,CAACC,OAAO,EAAED,GAAG,CAACC,OAAO,CAAEF,KAAK,GAAG,EAAE;EACpD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEb,MAAMG,YAAY,GAAIC,CAAM,IAAK;IAC/B,IAAIN,SAAS,KAAK,QAAQ,EACxBM,CAAC,CAACC,MAAM,CAAEL,KAAK,GAAGI,CAAC,CAACC,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAC3DP,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEb,OAAA,CAACC,YAAY;IAACmB,IAAI,EAAC,MAAM;IAACC,OAAO,EAAEL;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AAExD,CAAC;AAACf,EAAA,CAhBIF,QAAQ;AAAAkB,GAAA,GAARlB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}