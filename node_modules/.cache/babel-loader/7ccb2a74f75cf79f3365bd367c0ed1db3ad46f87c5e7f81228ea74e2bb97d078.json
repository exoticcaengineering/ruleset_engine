{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.input`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.blueLight;\n}};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  border-radius: 3px;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n`;\n_c = InputWrapper;\nconst InputBox = _ref2 => {\n  let {\n    inputType,\n    onChange\n  } = _ref2;\n  const handleChange = e => {\n    if (inputType === \"number\") e.target.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(InputWrapper, {\n    type: \"text\",\n    onInput: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c2 = InputBox;\nexport default InputBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"InputBox\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","InputWrapper","input","_ref","theme","colors","blueLight","_c","InputBox","_ref2","inputType","onChange","handleChange","e","target","value","replace","type","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  inputType: \"number\" | \"text\";\n  onChange: (val: string) => void;\n};\nconst InputWrapper = styled.input`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${({ theme }) => theme.colors.blueLight};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  border-radius: 3px;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n`;\n\nconst InputBox = ({ inputType, onChange }: Props) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (inputType === \"number\")\n      e.target!.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange(e.target.value);\n  };\n\n  return (\n    <InputWrapper  type=\"text\" onInput={handleChange}  />\n  );\n};\n\nexport default InputBox;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,KAAM;AAClC;AACA;AACA;AACA,sBAAsBC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,MAAM,CAACC,SAAS;AAAA,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIN,YAAY;AAclB,MAAMO,QAAQ,GAAGC,KAAA,IAAoC;EAAA,IAAnC;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAAF,KAAA;EAC9C,MAAMG,YAAY,GAAIC,CAAsC,IAAK;IAC/D,IAAIH,SAAS,KAAK,QAAQ,EACxBG,CAAC,CAACC,MAAM,CAAEC,KAAK,GAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAC3DL,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEf,OAAA,CAACC,YAAY;IAAEgB,IAAI,EAAC,MAAM;IAACC,OAAO,EAAEN;EAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AAEzD,CAAC;AAACC,GAAA,GAVIf,QAAQ;AAYd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}