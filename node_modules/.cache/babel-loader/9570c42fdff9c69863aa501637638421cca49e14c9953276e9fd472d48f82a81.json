{"ast":null,"code":"// map response data to format used by front\nexport const parseRulesetResponse = responseData => {\n  const rules = [];\n  responseData[0].schema.map(rule => {\n    const {\n      schema: {\n        field\n      },\n      current: {\n        operator,\n        value\n      }\n    } = rule;\n    return rules.push({\n      name: field,\n      operator,\n      value\n    });\n  });\n  console.log('parsed rules :', rules);\n  return rules;\n};","map":{"version":3,"names":["parseRulesetResponse","responseData","rules","schema","map","rule","field","current","operator","value","push","name","console","log"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/utilities/parseRulesetResponse.ts"],"sourcesContent":["// map response data to format used by front\nexport const parseRulesetResponse = (\n  responseData: ResponseData\n): RuleValues[] => {\n  const rules: RuleValues[] = [];\n  \n  responseData[0].schema.map((rule: RulesetSchemaObject) => {\n    const {\n      schema: { field },\n      current: { operator, value },\n    } = rule;\n\n    return rules.push({ name: field, operator, value });\n  });\n  console.log('parsed rules :', rules);\n  return rules;\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,oBAAoB,GAC/BC,YAA0B,IACT;EACjB,MAAMC,KAAmB,GAAG,EAAE;EAE9BD,YAAY,CAAC,CAAC,CAAC,CAACE,MAAM,CAACC,GAAG,CAAEC,IAAyB,IAAK;IACxD,MAAM;MACJF,MAAM,EAAE;QAAEG;MAAM,CAAC;MACjBC,OAAO,EAAE;QAAEC,QAAQ;QAAEC;MAAM;IAC7B,CAAC,GAAGJ,IAAI;IAER,OAAOH,KAAK,CAACQ,IAAI,CAAC;MAAEC,IAAI,EAAEL,KAAK;MAAEE,QAAQ;MAAEC;IAAM,CAAC,CAAC;EACrD,CAAC,CAAC;EACFG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEX,KAAK,CAAC;EACpC,OAAOA,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}