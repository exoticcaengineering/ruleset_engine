{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/RulesList/RulesList.tsx\";\nimport RuleRow from \"../RuleRow/RuleRow\";\nimport RuleInputs from \"../RuleInputs/RuleInputs\";\nimport { RulesWrapper } from \"./RulesList.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RulesList = _ref => {\n  let {\n    schema,\n    existingRules,\n    addRule\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RulesWrapper, {\n    border: !!existingRules.length,\n    children: [/*#__PURE__*/_jsxDEV(RuleInputs, {\n      schema: schema,\n      addFilter: addRule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existingRules\",\n      children: existingRules.map((i, index) => /*#__PURE__*/_jsxDEV(RuleRow, {\n        index: index,\n        values: i,\n        removeFilter: () => console.log('hello')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = RulesList;\nexport default RulesList;\nvar _c;\n$RefreshReg$(_c, \"RulesList\");","map":{"version":3,"names":["RuleRow","RuleInputs","RulesWrapper","jsxDEV","_jsxDEV","RulesList","_ref","schema","existingRules","addRule","border","length","children","addFilter","fileName","_jsxFileName","lineNumber","columnNumber","className","map","i","index","values","removeFilter","console","log","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/components/RulesList/RulesList.tsx"],"sourcesContent":["import RuleRow from \"../RuleRow/RuleRow\";\nimport RuleInputs from \"../RuleInputs/RuleInputs\";\nimport { RulesWrapper } from \"./RulesList.styles\";\n\ntype Props = {\n  schema: RuleSchema[];\n  existingRules: RuleValues[];\n  addRule: (newRule: RuleValues) => void;\n};\n\nconst RulesList = ({ schema, existingRules, addRule }: Props) => {\n  return (\n    <RulesWrapper border={!!existingRules.length}>\n      <RuleInputs schema={schema} addFilter={addRule} />\n      <div className=\"existingRules\">\n        {\n            existingRules.map((i:RuleValues, index: number) => \n                <RuleRow index={index} values={i} removeFilter={()=> console.log('hello')} />\n            )\n        }\n      </div>\n    </RulesWrapper>\n  );\n};\n\nexport default RulesList;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlD,MAAMC,SAAS,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAC1D,oBACEF,OAAA,CAACF,YAAY;IAACQ,MAAM,EAAE,CAAC,CAACF,aAAa,CAACG,MAAO;IAAAC,QAAA,gBAC3CR,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEA,MAAO;MAACM,SAAS,EAAEJ;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClDb,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAN,QAAA,EAExBJ,aAAa,CAACW,GAAG,CAAC,CAACC,CAAY,EAAEC,KAAa,kBAC1CjB,OAAA,CAACJ,OAAO;QAACqB,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEF,CAAE;QAACG,YAAY,EAAEA,CAAA,KAAKC,OAAO,CAACC,GAAG,CAAC,OAAO;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAChF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAED;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEnB,CAAC;AAACS,EAAA,GAbIrB,SAAS;AAef,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}