{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-useless-escape */\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.input`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.blueLight;\n}};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n  box-sizing: border-box;\n  padding: 0 7px;\n  border-style: ${_ref2 => {\n  let {\n    readOnly\n  } = _ref2;\n  return readOnly ? 'dashed' : 'solid';\n}};\n  pointer-events: ${_ref3 => {\n  let {\n    readOnly\n  } = _ref3;\n  return readOnly ? 'none' : 'all';\n}};\n\n  &::placeholder {\n    font-style: italic;\n    font-weight: 100;\n  }\n`;\n_c = InputWrapper;\nconst InputBox = _ref4 => {\n  _s();\n  let {\n    inputType,\n    onChange,\n    value,\n    readOnly\n  } = _ref4;\n  const ref = useRef(null);\n  useEffect(() => {\n    if (!value && ref.current) ref.current.value = \"\";\n  }, [value]);\n  const handleChange = e => {\n    if (inputType === \"number\") e.target.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange && onChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(InputWrapper, {\n    ref: ref,\n    type: \"text\",\n    onInput: handleChange,\n    defaultValue: value || \"\",\n    placeholder: \"Enter value\",\n    readOnly: !!readOnly\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(InputBox, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = InputBox;\nexport default InputBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"InputBox\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","InputWrapper","input","_ref","theme","colors","blueLight","_ref2","readOnly","_ref3","_c","InputBox","_ref4","_s","inputType","onChange","value","ref","current","handleChange","e","target","replace","type","onInput","defaultValue","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dave/Documents/Exoticca/ruleset_engine/src/library/ui/InputBox.tsx"],"sourcesContent":["/* eslint-disable no-useless-escape */\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  inputType: \"number\" | \"text\";\n  onChange?: (val: string) => void;\n  value: string | null;\n  readOnly?: boolean;\n};\nconst InputWrapper = styled.input<{ readOnly: boolean }>`\n  font-family: \"Roboto\";\n  height: 35px;\n  width: 190px;\n  border: 1px solid ${({ theme }) => theme.colors.blueLight};\n  cursor: pointer;\n  position: relative;\n  z-index: 10;\n  background-color: white;\n  margin-right: 20px;\n  overflow: visible;\n  box-sizing: border-box;\n  padding: 0 7px;\n  border-style: ${({ readOnly }) => readOnly ? 'dashed' : 'solid'};\n  pointer-events: ${({ readOnly }) => readOnly ? 'none' : 'all'};\n\n  &::placeholder {\n    font-style: italic;\n    font-weight: 100;\n  }\n`;\n\nconst InputBox = ({ inputType, onChange, value, readOnly }: Props) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!value && ref.current) ref.current!.value = \"\";\n  }, [value]);\n\n  const handleChange = (e: any) => {\n    if (inputType === \"number\")\n      e.target!.value = e.target.value.replace(/[^0-9 \\,]/, \"\");\n    onChange && onChange(e.target.value);\n  };\n\n  return (\n    <InputWrapper\n      ref={ref}\n      type=\"text\"\n      onInput={handleChange}\n      defaultValue={value || \"\"}\n      placeholder={\"Enter value\"}\n      readOnly={!!readOnly}\n    />\n  );\n};\n\nexport default InputBox;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,KAA6B;AACzD;AACA;AACA;AACA,sBAAsBC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,MAAM,CAACC,SAAS;AAAA,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBC,KAAA;EAAA,IAAC;IAAEC;EAAS,CAAC,GAAAD,KAAA;EAAA,OAAKC,QAAQ,GAAG,QAAQ,GAAG,OAAO;AAAA,CAAC;AAClE,oBAAoBC,KAAA;EAAA,IAAC;IAAED;EAAS,CAAC,GAAAC,KAAA;EAAA,OAAKD,QAAQ,GAAG,MAAM,GAAG,KAAK;AAAA,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,EAAA,GApBIT,YAAY;AAsBlB,MAAMU,QAAQ,GAAGC,KAAA,IAAqD;EAAAC,EAAA;EAAA,IAApD;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,KAAK;IAAER;EAAgB,CAAC,GAAAI,KAAA;EAC/D,MAAMK,GAAG,GAAGpB,MAAM,CAAmB,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACoB,KAAK,IAAIC,GAAG,CAACC,OAAO,EAAED,GAAG,CAACC,OAAO,CAAEF,KAAK,GAAG,EAAE;EACpD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMG,YAAY,GAAIC,CAAM,IAAK;IAC/B,IAAIN,SAAS,KAAK,QAAQ,EACxBM,CAAC,CAACC,MAAM,CAAEL,KAAK,GAAGI,CAAC,CAACC,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAC3DP,QAAQ,IAAIA,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EACtC,CAAC;EAED,oBACEhB,OAAA,CAACC,YAAY;IACXgB,GAAG,EAAEA,GAAI;IACTM,IAAI,EAAC,MAAM;IACXC,OAAO,EAAEL,YAAa;IACtBM,YAAY,EAAET,KAAK,IAAI,EAAG;IAC1BU,WAAW,EAAE,aAAc;IAC3BlB,QAAQ,EAAE,CAAC,CAACA;EAAS;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEN,CAAC;AAACjB,EAAA,CAvBIF,QAAQ;AAAAoB,GAAA,GAARpB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}